name: Build

on:
  push:
  pull_request:
  release:
    types:
      - published
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * 1'

jobs:
  wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      CIBW_SKIP: pp* *-win32
      CIBW_TEST_REQUIRES: pytest numpy
      CIBW_TEST_COMMAND: "pytest -v {project}/tests"
      # we are copying the shared libraries ourselves so skip magical copy
      CIBW_REPAIR_WHEEL_COMMAND_MACOS: ""
      MACOSX_DEPLOYMENT_TARGET: 10.9
      CIBW_BUILD_VERBOSITY_MACOS: 3
      CIBW_TEST_SKIP: "*-macosx_arm64 *-macosx_universal2:arm64 *-musllinux* *i686"
      CIBW_ARCHS_MACOS: "x86_64 arm64"
      CIBW_ARCHS_WINDOWS: "AMD64 ARM64"
      CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: ""
      CIBW_BEFORE_ALL_LINUX: "pip install cmake; bash {project}/ci/install_libspatialindex.bash"
      CIBW_BEFORE_ALL_WINDOWS: "pip install cmake; {project}/ci/install_libspatialindex.bat"
      CIBW_BEFORE_ALL_MACOS: "brew install coreutils; pip install cmake; bash {project}/ci/install_libspatialindex.bash"
      
    strategy:
      matrix:
        os: [windows-latest]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      name: Install Python
      with:
        python-version: '3.10'
    - uses: ilammy/msvc-dev-cmd@v1
      if: startsWith(matrix.os, 'windows')
    - name: Build wheels
      uses: pypa/cibuildwheel@v2.11.2
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-whl
        path: wheelhouse/*.whl
