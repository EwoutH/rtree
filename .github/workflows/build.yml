name: Build

on:
  push:
  pull_request:
  release:
    types:
      - published
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * 1'

jobs:
  wheels_aarch64:
    name: Build Linux wheels on aarch64
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      name: Install Python
      with:
        python-version: '3.10'
    - uses: docker/setup-qemu-action@v2
      name: Set up QEMU
      with:
        platforms: arm64
    - name: Install libspatialindex
      run: |
        pip install cmake
        bash {project}/ci/install_libspatialindex.bash
    - name: Build wheels
      uses: pypa/cibuildwheel@v2.11.2
      env:
        CIBW_ARCHS_LINUX: aarch64
        CIBW_TEST_REQUIRES: pytest numpy
        CIBW_TEST_COMMAND: "pytest -v {project}/tests"
    - uses: actions/upload-artifact@v3
      with:
        name: aarch64-whl
        path: wheelhouse/*.whl

  collect-artifacts:
    name: Package and push release

    #needs: [windows-wheel, linux-wheel, osx-wheel, conda, ubuntu]
    needs: [conda, ubuntu, wheels, wheels_aarch64]

    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: true

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.10'
      - name: Source
        shell: bash -l {0}
        run: |
            sudo apt install libspatialindex-c6 python3-pip
            python3 -m pip install --upgrade pip
            python3 -m pip install setuptools numpy pytest wheel
            export PATH=$PATH:/home/runner/.local/bin
            python3 setup.py sdist

      - uses: actions/download-artifact@v3
        with:
          path: dist
        name: Download artifacts

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: dist

      - name: Unpack
        shell: bash -l {0}
        working-directory: dist
        run: |
          for f in *whl
          do
            cd "$f"
            cp *.whl ..
            cd ..
          done;
          rm -rf *\-whl
          ls -al

      - uses: pypa/gh-action-pypi-publish@release/v1
        name: Publish package
        if: github.event_name == 'release' && github.event.action == 'published'
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}
          packages_dir: ./dist
